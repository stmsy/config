# Local executables
if [[ "$OSTYPE" =~ "darwin*" ]]; then
   export PATH="/usr/local/bin:$PATH"
fi

# direnv
export EDITOR=$(which emacs)
eval "$(direnv hook zsh)"

# anyenv
eval "$(anyenv init -)"

# Python
## pyenv-virtualenv
eval "$(pyenv virtualenv-init -)"
export PATH="$(pyenv root)/shims:$PATH"
export PYENV_VIRTUALENV_DISABLE_PROMPT=1
## Poetry
export PATH="$HOME/.poetry/bin:$PATH"

# R
# export R_HOME="/usr/local/lib/R"
# export R_DEFAULT_DEVICE="quartz"

# Go
export GOPATH="$HOME/go"
export GOENV_ROOT="$HOME/.goenv"
# export PATH="$GOENV_ROOT/bin:$PATH"
eval "$(goenv init -)"
# export PATH="$GOROOT/bin:$PATH"
# export PATH="$PATH:$GOPATH/bin"

# Clang 4
export PATH="/usr/local/clang4/bin:$PATH"

# icu4c
export PATH="/usr/local/opt/icu4c/bin:$PATH"
export PATH="/usr/local/opt/icu4c/sbin:$PATH"

# OpenBLAS
export LDFLAGS="-L/usr/local/opt/openblas/lib"
export CPPFLAGS="-I/usr/local/opt/openblas/include"

# zlib
export LDFLAGS="-L/usr/local/opt/zlib/lib"
export CPPFLAGS="-I/usr/local/opt/zlib/include"

# pkg-config
export PKG_CONFIG_PATH="/usr/local/opt/zlib/lib/pkgconfig"

# History
export HISTFILE=~/.zsh_history
export HISTSIZE=6000000
export SAVEHIST=6000000
autoload history-search-end
zle -N history-beginning-search-backward-end history-search-end
zshaddhistory(){
  local line=${1%%$'\n'}
  local cmd=${line%% *}
  [[ ${cmd} != (ls) && ${cmd} != (cd) && ${cmd} != (rm) ]]
}

# Complement
## zsh-completions
# if type brew &>/dev/null; then
#   FPATH=$(brew --prefix)/share/zsh-completions:$FPATH
#   autoload -Uz compinit
#   compinit
# fi
setopt correct

# Locales
export LC_ALL=ja_JP.UTF-8
export LC_CTYPE=ja_JP.UTF-8
export LANG=ja_JP.UTF-8

# Prompt
case $OSTYPE in
    darwin*)
        export PS1="macos$ ";;
    linux*)
        export PS1="debian$ ";;
esac
source /opt/git/gitbranch.sh
SPROMPT="%r is correct? [n,y,a,e]: "

# Title
case "${TERM}" in
kterm*|xterm)
    precmd() {
        echo -ne "\033]0;${USER}@${HOST%%.*}:${PWD}\007"
    }
    ;;
esac
case "{$TERM}" in
screen)
    preexec() {
        echo -ne "\ek#${1%% *}\e\\"
    }
    precmd() {
        echo -ne "\ek$(basename $(pwd))\e\\"
    }
esac

# Directory names on tab
echo -ne "\033]0;$(pwd | rev | awk -F \/ '{print "/"$1}'| rev)\007"
function chpwd() {
    echo -ne "\033]0;$(pwd | rev | awk -F \/ '{print "/"$1}'| rev)\007"
}

# Aliases
alias rm="rm -i"
alias ipython="ipython --no-banner"
alias vpn-connect="networksetup -connectpppoeservice"
alias vpn-disconnect="networksetup -disconnectpppoeservice"

# gitignore.io
function gi() {
    curl -sLw n https://www.toptal.com/developers/gitignore/api/$@ ;
}

# Starship
eval "$(starship init zsh)"

# Google Cloud SDK

# The next line updates PATH for the Google Cloud SDK.
if [ -f '/opt/gcp/google-cloud-sdk/path.zsh.inc' ]; then . '/opt/gcp/google-cloud-sdk/path.zsh.inc'; fi

# The next line enables shell command completion for gcloud.
if [ -f '/opt/gcp/google-cloud-sdk/completion.zsh.inc' ]; then . '/opt/gcp/google-cloud-sdk/completion.zsh.inc'; fi

# Secretive
export SSH_AUTH_SOCK=/Users/stmsy/Library/Containers/com.maxgoedjen.Secretive.SecretAgent/Data/socket.ssh

